#summary Roadmap for Otis
#labels Featured,Phase-Requirements

== Roadmap == 
This is the current roadmap for Otis library. It contains features which are needed, as well as features which are fun. Some of them will probably never be implemented. It could also be changed at any time. Feel free to suggest anything you think might be missing, or boo anything that you consider wrong, broken, stupid or useless.

=== Version 0.1 (Current) ===
  * Configuration via attributes and XML
  * XML sources: standalone file, embedded resource
  * Standard expression mapping
  * IList <-> Array
  * XML schema to support intellisense in Visual Studio
  * Custom configuration providers
  * Assembler generation:  in-memory, on the file system, source code only
  * Helper functions for custom conversions
  * Expression formatting
  * Null Value handling

=== Version 0.2 (in work - expected in January, 2008) ===
  * Aggregate functions *(implemented as of 30.11.07.)*
  * Better default/null value handling (also for value types)
  * String literal expressions

=== Version 0.3 ===
  * NHibernate uninitialized collections and references
  * Factories, factory methods
  * Enum conversions (enum -> enum, enum->string, constant->enum)

=== Version 0.4 ===
  * Events for hooking into conversion process
  * Inheritance issues
  * Better debugging support

=== Version 0.5 ===
  * Move all strings to resources
  * Localization (e.g. for !DateTime conversions)
  
=== Future versions ===
  * Reverse (bidirectional) conversion
  * Tool for generation of XML mapping from attributes
  * Standalone assembly/source code generator (can be used as a part of an automated build)
  * Object->map transformation: user.!FirstName -> userMap["!FirstName"]
  * Filtering: [Map("$Projects/Tasks", Filter = "$Duration > 3"]
  * Statistics
  * Contexts
  * Type safe mapping via delegates: something like {{{[Map({(User u) => u.First + " " + u.Last})]}}} in C#3.0